<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1326.ve643e00e9220">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3769.v8b_e595e4d40d">
    <script>pipeline {
    agent {
        label &apos;ansible-runner&apos;
    }

    stages {
        stage(&apos;Check Java&apos;) {
            steps {
                script {
                    def javaVersion = sh(script: &apos;java -version 2&gt;&amp;1 | grep version&apos;, returnStdout: true).trim()
                    echo &quot;Java Version: ${javaVersion}&quot;
                }
            }
        }

        stage(&apos;Check Python&apos;) {
            steps {
                script {
                    def pythonVersion = sh(script: &apos;python --version 2&gt;&amp;1&apos;, returnStdout: true).trim()
                    echo &quot;Python Version: ${pythonVersion}&quot;
                }
            }
        }

        stage(&apos;Check Ansible&apos;) {
            steps {
                script {
                    def ansibleVersion = sh(script: &apos;ansible --version 2&gt;&amp;1 | grep ansible&apos;, returnStdout: true).trim()
                    echo &quot;Ansible Version: ${ansibleVersion}&quot;
                }
            }
        }

        stage(&apos;Check Collections Folder&apos;) {
            steps {
                script {
                    def collectionsFolder = sh(script: &apos;sudo ls /root/.ansible/collections&apos;, returnStatus: true)
                    if (collectionsFolder == 0) {
                        echo &quot;Collections Folder is present.&quot;
                    } else {
                        error &quot;Collections Folder is not present.&quot;
                    }
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>